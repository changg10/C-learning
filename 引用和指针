###########引用（reference）
int ival = 1024；
int &refval = ival；// 引用必须初始化，refval指向ival
初始化变量时，初始值会被拷贝到新建的对象中。定义引用时，程序把引用和它的初始值绑定在一起，而不是将初始值拷贝给引用。一直绑定bind，必须初始化。
引用即别名，并非对象，只是一个已经存在的对象所起的另一个名字
引用的类型都要与绑定的对象类型严格匹配
int & val = 10； // 错误 引用类型的初始值必须是对象
int a = 100；
double &b = a；//类型必须匹配
############指针（poniter）
与引用类似，实现对其他对象的间接访问。
指针本身就是一个对象，允许指针赋值和拷贝，可以指向不同的对象；指针无须在定义是赋初值。
int  *ip1, ip2; //ip1是指向int对象的指针 ， ip2是int型对象
取址符（&）
int val = 42；
int *p = &val； //p存放变量val的地址或p指向变量val的指针；p定义为一个指向int的指针
解引用符（*）
int val = 42； int *p = &val； cout<< *p; // 输出42 ； 若修改 *p=0； cout<<*p； //输出0 
空指针 在试图使用一个指针之前代码应该先检查指针是否为空。 int *p1 = nullptr ; // 空指针初始化
****赋值永远改变的等号左侧的对象******
pi = &ival ； // pi的值被改变，现在pi指向了ival 
*pi = 0；// ival的值被改变 ，指针pi并没有改变，指针pi指向的那个对象发生改变
